# This GitHub Actions workflow is triggered on every push to the main branch.
# It builds the Spring Boot application, runs tests, creates a Docker image, 
# provisions the infrastructure with Terraform, and deploys the new image.

name: Build and Deploy to Amazon ECS

on:
  push:
    branches:
      - main

# Environment variables available to all jobs and steps in this workflow.
env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: product/product-service

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for AWS OIDC connection

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle
      run: ./gradlew build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        labels: |
          org.opencontainers.image.source=${{ github.repositoryUrl }}
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: terraform -chdir=infra init

    - name: Terraform Plan
      id: plan
      run: |
        terraform -chdir=infra plan -var="app_image=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}" -no-color
      continue-on-error: true

    - name: Terraform Apply
      run: |
        terraform -chdir=infra apply -auto-approve -var="app_image=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"